
import com.sun.corba.se.impl.orbutil.graph.Graph;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Time;
import java.util.LinkedList;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Raluca
 */
public class CircleApplet extends javax.swing.JApplet {
    /**
     * Initializes the applet CircleApplet
     */
    LinkedList<Circle> circles;
    Timer tm;
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CircleApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CircleApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CircleApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CircleApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    // se initializeaza lista de cercuri
                    circles = new LinkedList<Circle>();
                    // se defineste un timer care se apeleaza la 20ms
                    tm = new Timer(20, new ActionListener() {
                    @Override
                    // la fiecare update al timer-ului se redeseneaza cercurile pe canvas
                    public void actionPerformed(ActionEvent e) {
                            canvas.repaint();
                            for(Circle c : circles){
                                c.drawCircle(canvas);
                            }
                        }
                    });
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        redButton = new javax.swing.JButton();
        canvas = new java.awt.Canvas();
        blueButton = new javax.swing.JButton();
        yellowButton = new javax.swing.JButton();
        redStop = new javax.swing.JButton();
        blueStop = new javax.swing.JButton();
        yellowStop = new javax.swing.JButton();
        speedSlide = new javax.swing.JSlider();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        redButton.setText("Red");
        redButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonClick(evt);
            }
        });

        blueButton.setText("Blue");
        blueButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonClick(evt);
            }
        });

        yellowButton.setText("Yellow");
        yellowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonClick(evt);
            }
        });

        redStop.setText("Stop");
        redStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopMotion(evt);
            }
        });

        blueStop.setText("Stop");
        blueStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopMotion(evt);
            }
        });

        yellowStop.setText("Stop");
        yellowStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopMotion(evt);
            }
        });

        speedSlide.setMinimum(20);
        speedSlide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SpeedChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(speedSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(redButton)
                            .addComponent(blueButton)
                            .addComponent(yellowButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(redStop)
                            .addComponent(blueStop)
                            .addComponent(yellowStop))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(canvas, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(redButton)
                            .addComponent(redStop))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(blueButton)
                            .addComponent(blueStop))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yellowButton)
                            .addComponent(yellowStop))
                        .addGap(27, 27, 27)
                        .addComponent(speedSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
  
    private void ButtonClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonClick
        // TODO add your handling code here:
        tm.stop();
        if(evt.getComponent().equals(redButton))
            circles.add(new Circle(Color.RED, canvas.getSize()));
        if(evt.getComponent().equals(blueButton))
            circles.add(new Circle(Color.BLUE, canvas.getSize()));
        if(evt.getComponent().equals(yellowButton))
            circles.add(new Circle(Color.YELLOW, canvas.getSize()));
        tm.start();
    }//GEN-LAST:event_ButtonClick

    private void SpeedChange(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SpeedChange
        // TODO add your handling code here:
        tm.stop();
        tm.setDelay(120 - speedSlide.getValue());
        tm.start();
    }//GEN-LAST:event_SpeedChange

    private void StopMotion(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopMotion
        // TODO add your handling code here:
        Color c = Color.PINK;
        if(evt.getComponent().equals(redStop))
            c = Color.RED;
        if(evt.getComponent().equals(blueStop))
            c = Color.BLUE;
        if(evt.getComponent().equals(yellowStop))
            c = Color.YELLOW;
        for(Circle cir : circles)
            if(cir.ColorMatch(c))
                cir.Stop();
    }//GEN-LAST:event_StopMotion


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blueButton;
    private javax.swing.JButton blueStop;
    private java.awt.Canvas canvas;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JButton redButton;
    private javax.swing.JButton redStop;
    private javax.swing.JSlider speedSlide;
    private javax.swing.JButton yellowButton;
    private javax.swing.JButton yellowStop;
    // End of variables declaration//GEN-END:variables
}
